from trigger.trigger import Trigger
from discord import ApplicationContext

class PrimaryChannelsTrigger(Trigger):
    def __init__(self):
        super().__init__("Primary Channels Vulnerability")
    
    async def is_rulechannel_vulnerable(self, channel):
        if channel is None:
            return False
        channel_messages = await channel.history(limit=1).flatten()
        return len(channel_messages) == 0
    
    async def is_welcomechannel_vulnerable(self, channel):
        if channel is None:
            return False
        return channel.guild.system_channel.id != channel.id

    async def check(self, ctx: ApplicationContext, **kwargs):
        await super().check(ctx)
        
        rules_channel = kwargs.get('rulesc')
        welcome_channel = kwargs.get('welcomec')

        if rules_channel is None and welcome_channel is None:
            return '[⏭️] You did not provide rule channel nor welcome channel. Skipping PCV.'
        
        vulnerable_rules = await self.is_rulechannel_vulnerable(rules_channel)
        vulnerable_welcome = await self.is_welcomechannel_vulnerable(welcome_channel)

        if vulnerable_rules and vulnerable_welcome:
            return '[❌] Your Rules and Welcome channels are vulnerable. Rules channel is empty, Welcome channel is not configured properly in server settings.\n Possible solution: add rules, configure system channel in server settings.'
        elif vulnerable_rules:
            return '[❌] Your Rules channel is vulnerable. Rules channel is empty. Possible solution: add rules.'
        elif vulnerable_welcome:
            return '[❌] Your Welcome channel is vulnerable. Welcome channel is not configured properly in server settings. Possible solution: configure system channel in server settings.'

        return '[✅] Your server is NOT vulnerable by PCV!'